apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        consumerProguardFiles 'proguard-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

//加载local property
Properties properties = new Properties()
def propFile = new File("$rootDir/local.properties")
def nle_source = false
if (propFile.exists()) {
    InputStream inputStream = new FileInputStream(propFile);
    properties.load(inputStream)
    def enable_nle_resource =  properties.getProperty('code.NLEPlatform')
    if(enable_nle_resource != null ) {
        nle_source =  enable_nle_resource.toBoolean()
    } else {
        nle_source =  false
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation rootProject.ext.support["recyclerview"]
    api rootProject.ext.support["appcompat"]

    implementation project(":aar_nleeditor_ck")
    implementation project(":aar_vesdk")

    api 'com.google.code.gson:gson:2.9.1'
    api "org.jetbrains.kotlin:kotlin-stdlib:${rootProject.ext.kotlin_version}"
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
}
